#include "outfit.hpp"
#include "packet.hpp"
#include <iostream>

using namespace std;

uint32_t Outfit::colorP[33*4+1] = {
  0xFFFFFF, 0xFFD4BF, 0xFFE9BF, 0xFFFFBF,
  0xE9FFBF, 0xD4FFBF, 0xBFFFBF, 0xBFFFD4,
  0xBFFFE9, 0xBFFFFF, 0xBFE9FF, 0xBFD4FF,
  0xBFBFFF, 0xD4BFFF, 0xE9BFFF, 0xFFBFFF,
  0xFFBFE9, 0xFFBFD4, 0xFFBFBF, 0xDADADA,
  0xBF9F8F, 0xBFAF8F, 0xBFBF8F, 0xAFBF8F,
  0x9FBF8F, 0x8FBF8F, 0x8FBF9F, 0x8FBFAF,
  0x8FBFBF, 0x8FAFBF, 0x8F9FBF, 0x8F8FBF,
  0x9F8FBF, 0xAF8FBF, 0xBF8FBF, 0xBF8FAF,
  0xBF8F9F, 0xBF8F8F, 0xB6B6B6, 0xBF7F5F,
  0xBFAF8F, 0xBFBF5F, 0x9FBF5F, 0x7FBF5F,
  0x5FBF5F, 0x5FBF7F, 0x5FBF9F, 0x5FBFBF,
  0x5F9FBF, 0x5F7FBF, 0x5F5FBF, 0x7F5FBF,
  0x9F5FBF, 0xBF5FBF, 0xBF5F9F, 0xBF5F7F,
  0xBF5F5F, 0x919191, 0xBF6A3F, 0xBF943F,
  0xBFBF3F, 0x94BF3F, 0x6ABF3F, 0x3FBF3F,
  0x3FBF6A, 0x3FBF94, 0x3FBFBF, 0x3F94BF,
  0x3F6ABF, 0x3F3FBF, 0x6A3FBF, 0x943FBF,
  0xBF3FBF, 0xBF3F94, 0xBF3F6A, 0xBF3F3F,
  0x6D6D6D, 0xFF5500, 0xFFAA00, 0xFFFF00,
  0xAAFF00, 0x54FF00, 0x00FF00, 0x00FF54,
  0x00FFAA, 0x00FFFF, 0x00A9FF, 0x0055FF,
  0x0000FF, 0x5500FF, 0xA900FF, 0xFE00FF,
  0xFF00AA, 0xFF0055, 0xFF0000, 0x484848,
  0xBF3F00, 0xBF7F00, 0xBFBF00, 0x7FBF00,
  0x3FBF00, 0x00BF00, 0x00BF3F, 0x00BF7F,
  0x00BFBF, 0x007FBF, 0x003FBF, 0x0000BF,
  0x3F00BF, 0x7F00BF, 0xBF00BF, 0xBF007F,
  0xBF003F, 0xBF0000, 0x242424, 0x7F2A00,
  0x7F5500, 0x7F7F00, 0x557F00, 0x2A7F00,
  0x007F00, 0x007F2A, 0x007F55, 0x007F7F,
  0x00547F, 0x002A7F, 0x00007F, 0x2A007F,
  0x54007F, 0x7F007F, 0x7F0055, 0x7F002A,
  0x7F0000
};

Outfit::Outfit(){

}

bool Outfit::fromMsg(NetworkPacket& p){
  if(p.getSize()<2) return false;
  lookType = p.getUint16();
  if(lookType != 0){
    if(p.getSize()<5) return false;
    lookHead = p.getUint8();
    lookBody = p.getUint8();
    lookLegs = p.getUint8();
    lookFeet = p.getUint8();
    lookAddons = p.getUint8();
    //TODO looks is above color pallete
  } else {
    if(p.getSize()<2) return false;
    uint16_t itemId = p.getUint16();
    if(itemId != 0){ //TODO looktypeex
      cout<<"looktypeex"<<endl;
      return false;
    }
  }
  if(p.getSize()<2) return false;
  lookMount = p.getUint16();
  return true;
}

void Outfit::toMsg(NetworkPacket& p){
  //TODO finish
}

uint16_t Outfit::getType(){
  return lookType;
}

uint32_t Outfit::getHeadColor(){
  return colorP[lookHead];
}
uint32_t Outfit::getBodyColor(){
  return colorP[lookBody];
}
uint32_t Outfit::getLegsColor(){
  return colorP[lookLegs];
}
uint32_t Outfit::getFeetColor(){
  return colorP[lookFeet];
}